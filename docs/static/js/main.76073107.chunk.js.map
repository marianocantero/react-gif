{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGirdItem.js","components/GifGrid.js","components/GifApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGirdItem","className","src","alt","GifGrid","console","log","key","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iLAyCeA,EAtCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAmBrC,OAEI,0BACIC,SAda,SAAAC,GACjBA,EAAEC,iBAEe,KAAdJ,IACCF,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAc,OAWd,2BACIK,KAAK,OACLC,MAAOP,EACPQ,SAvBc,SAAAL,GACtBF,EAAcE,EAAEM,OAAOF,Y,uBCRjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UAAUH,GAF5C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDC2BNO,EAxBM,SAACf,GAAc,IAAD,EAELZ,mBAAS,CAC/BmB,KAAK,GACLS,SAAS,IAJkB,mBAExBC,EAFwB,KAEjBC,EAFiB,KAqB/B,OAdAC,qBAAU,WACNpB,EAAQC,GACPoB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLX,KAAKc,EACLL,SAAS,MAEd,UAIR,CAAChB,IACGiB,GCXIM,EAXK,SAAC,GAAqB,EAApBZ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAG7B,OACA,yBAAKsB,UAAU,QACX,yBAAMC,IAAKvB,EAAKwB,IAAKd,IACrB,2BAAIA,KC8BGe,EAjCC,SAAC,GAAgB,IAAf3B,EAAc,EAAdA,SAAc,EAEKe,EAAaf,GAAhCa,EAFc,EAEpBN,KAAcS,EAFM,EAENA,QAOlB,OANJY,QAAQC,IAAIb,GAOR,oCAEI,4BAAKhB,GACJgB,GAAW,yCACVA,EAAU,cAAgB,eAC3B,yBAAKQ,UAAU,aAGRX,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIoB,IAAKpB,EAAIC,IACLD,UCOjBqB,EA7BA,WAAM,MAGmB3C,mBAAS,CAAC,cAH7B,mBAGV4C,EAHU,KAGE7C,EAHF,KAUjB,OACI,oCACI,yCACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BACK6C,EAAWvB,KAAI,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CAAS8B,IAAK9B,EACVA,SAAUA,UCnBlCiC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.76073107.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    \r\n    const handleInputChange = e => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue !==''){\r\n            setcategories(cats => [inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return ( \r\n        \r\n        <form\r\n            onSubmit = { handleSubmit}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n      \r\n     );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n \r\nexport default AddCategory;","export  const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=qPb6EdP2oMNBu05atSjAQP3RUrLjpIbc`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nconst useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n            \r\n            setTimeout(() => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                })\r\n            }, 3000);\r\n            \r\n           \r\n        })\r\n    }, [category])\r\n    return state;\r\n}\r\n \r\nexport default useFetchGifs;","import React from 'react';\r\n\r\nconst GifGirdItem = ({id, title, url}) => {\r\n\r\n    \r\n    return ( \r\n    <div className=\"card\">\r\n        <img  src={url} alt={title}/>\r\n        <p>{title}</p>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default GifGirdItem;","import React from 'react';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GifGirdItem from './GifGirdItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data: images, loading} = useFetchGifs(category);\r\n    console.log(loading)\r\n   \r\n   \r\n\r\n      \r\n           \r\n        return ( \r\n        <>\r\n\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading...</p>}\r\n            { loading ? 'Cargando...' : 'Data cargada'}\r\n             <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img =>(\r\n                        <GifGirdItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ) \r\n\r\n                    )\r\n                }\r\n            </div>  \r\n        </>\r\n            );\r\n    \r\n}\r\n \r\nexport default GifGrid;","import React, {useState} from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball Z'];\r\n    const [categories, setcategories] = useState(['One Punch']);\r\n/* \r\n    const handleAdd = () => {\r\n        //setcategories([...categories, 'Naruto']);\r\n        setcategories(cats => [...cats, 'Naruto']);\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>Desde Gif</h2>\r\n            <AddCategory setcategories={setcategories} />\r\n            <hr />\r\n            \r\n            \r\n            \r\n            <ol>\r\n                {categories.map(category => (\r\n                    <GifGrid key={category}\r\n                        category={category}\r\n                    />\r\n                ))}\r\n            </ol>\r\n       </>\r\n    );\r\n}\r\n \r\nexport default GifApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifApp from './components/GifApp';\n\n\nReactDOM.render(\n  \n    <GifApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}